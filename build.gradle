buildscript {
    ext {
        //核心组件版本
        springBootVersion = '2.6.13'
        springCloudVersion = '2021.0.5'
        springCloudAlibabaVersion = '2021.0.5.0'
        gradleReleaseVersion = '3.0.2'

        //组件版本
        lomokVersion = '1.18.20'
        mybatisPlusVersion = '3.5.2'
        mysqlConnectorVersion = '8.0.31'
        hutoolVersion = '5.8.15'
        itextpdfVersion = '5.4.2'
        kissoVersion = '3.8.3'
        disruptorVersion = '3.4.4'
        jtsVersion = '1.18.2'
        springdocVersion = '1.6.8'

        // 配置 Maven 发布的仓库信息
        myNexusRepoUrl = "http://39.100.225.51:18001/repository/stormwind"
        myNexusSnapshotsRepoUrl = "http://39.100.225.51:18001/repository/stormwind-snapshot/"
        myNexusRepoUsername = "guoqianyou"
        myNexusRepoPassword = "Gqy17949"
    }

    //设置仓库
    repositories {
        mavenLocal()
        maven {
            name "USTB"; url "http://39.100.225.51:18001/repository/stormwind-public"
            allowInsecureProtocol = true
            credentials { username myNexusRepoUsername; password myNexusRepoPassword }
        }
        maven { name "Alibaba"; url "https://maven.aliyun.com/repository/public" }
        maven { name "gradle"; url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        //spring-boot-gradle-plugin,方便版本管理
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "net.researchgate:gradle-release:${gradleReleaseVersion}"
    }
}



//全局配置,包括root和所有子项目都会继承
allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: "net.researchgate.release"

    group 'cn.miniants'
    sourceCompatibility = 17
    targetCompatibility = 17

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-parameters"
    }

    repositories {
        mavenLocal()
        maven {
            name "USTB"; url "http://39.100.225.51:18001/repository/stormwind-public";
            allowInsecureProtocol = true
            credentials { username myNexusRepoUsername; password myNexusRepoPassword }
        }
        maven { name "Alibaba"; url "https://maven.aliyun.com/repository/public" }
        mavenCentral()
    }


    // 根据版本号判断是否为快照版本
    def isSnapshot = project.version.endsWith("-SNAPSHOT")
    // 配置发布任务
    publishing {
        // 发布的组件信息
        publications {
            myPublish(MavenPublication) {
                versionMapping {
                    from components.java
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }

        // 发布的仓库信息
        repositories {
            maven {
                allowInsecureProtocol true
                url isSnapshot ? myNexusSnapshotsRepoUrl : myNexusRepoUrl
                credentials { username myNexusRepoUsername; password myNexusRepoPassword }
            }
        }
    }




}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        annotationProcessor 'org.projectlombok:lombok' //注释处理器
        api 'org.projectlombok:lombok' //引入lombok
        api 'cn.hutool:hutool-all'

    }
    dependencyManagement {
        dependencies {
            dependency "org.projectlombok:lombok:${lomokVersion}" //lombok
            dependency "mysql:mysql-connector-java:${mysqlConnectorVersion}" //mysql
            dependency "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"//数据库操作
            dependency "cn.hutool:hutool-all:${hutoolVersion}" //工具包
            dependency "com.itextpdf:itextpdf:${itextpdfVersion}" //pdf
            dependency "com.baomidou:kisso:${kissoVersion}" //单点登录
            dependency "com.lmax:disruptor:${disruptorVersion}" //高性能队列
            dependency "org.locationtech.jts:jts-core:${jtsVersion}" //空间分析
            dependency "org.springdoc:springdoc-openapi-webmvc-core:${springdocVersion}" //swagger文档生成器

        }
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
    }

}



release {
    failOnCommitNeeded = false
    failOnUnversionedFiles = false
    scmAdapters = [net.researchgate.release.GitAdapter]
    git{
        requireBranch.set('master')
    }
}
tasks.named('publish').configure(t->t.dependsOn('release'))
